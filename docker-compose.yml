version: "3"

services:

  db:
    image: postgres:alpine
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro

  api:
    image: adfinis-sygroup/mysagw
    ports:
      - "8000:8000"
    depends_on:
      - db

  caluma:
    image: projectcaluma/caluma:version-7.2.0
    build:
      context: caluma
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - OIDC_BEARER_TOKEN_REVALIDATION_TIME=300
      - VISIBILITY_CLASSES=caluma.caluma_user.visibilities.Authenticated,caluma.extensions.visibilities.MySAGWVisibility
      - PERMISSION_CLASSES=caluma.caluma_user.permissions.IsAuthenticated,caluma.extensions.permissions.MySAGWPermission
      - LANGUAGE_CODE=de
      - LANGUAGES=de,fr
    depends_on:
      - db
      - keycloak

  caddy:
    restart: unless-stopped
    image: caddy:latest
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  keycloak:
    depends_on:
      - db
    image: jboss/keycloak:12.0.1
    volumes:
      - ./keycloak/dev-config.json:/etc/keycloak/dev-config.json
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=db
      - DB_USER=keycloak
      - DB_DATABASE=keycloak
      - KEYCLOAK_USER=admin
      - PROXY_ADDRESS_FORWARDING=true
    # export is a bit tricky: We need to _start_ keycloak with specific arguments to perform an export
    # command: ["-Dkeycloak.migration.action=export", "-Dkeycloak.migration.provider=singleFile", "-Dkeycloak.migration.file=/etc/keycloak/dev-config.json", "-b", "0.0.0.0"]
    #
    # http://www.keycloak.org/docs/3.3/server_admin/topics/export-import.html
    command:
      [
      "-Dkeycloak.migration.action=import",
      "-Dkeycloak.migration.strategy=IGNORE_EXISTING",
      "-Dkeycloak.migration.provider=singleFile",
      "-Dkeycloak.migration.file=/etc/keycloak/dev-config.json",
      "-b",
      "0.0.0.0",
      ]

  ember:
    build:
      context: ./ember/

volumes:
  dbdata:
  caddy_data:
  caddy_config:
